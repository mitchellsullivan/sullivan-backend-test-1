openapi: 3.0.0
info:
  title: sullivan-backend-test-1
  version: 1.0.0
servers:
  - url: http://localhost:8099/api/v1
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
paths:
  /auth/register:
    post:
      tags:
        - General
      summary: Sign Up
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                user:
                  username: FooBar
                  email: foo.bar@example.com
                  password: HelloWorld!123
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                example:
                  user:
                    username: FooBar
                    email: foo.bar@example.com
                    token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NDIyMDAwMTIsInN1YiI6IjAxRlNEN0ZaWFpIU0VCQjVBN0dOMDhXQ0JEIn0.MpWf3fckDSJl1K9CHm-KJRDSmeN0yFX-hdcihXEsby0
        '422':
          description: Validation error, such as existing user with email or username.
          content:
            application/json:
              schema:
                type: object
                example:
                  errors:
                    db: 'ERROR: duplicate key value violates unique constraint "ux_user_username" (SQLSTATE 23505)'


  /auth/login:
    post:
      tags:
        - General
      summary: Login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                user:
                  email: foo.bar@example.com
                  password: HelloWorld!123
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                example:
                  user:
                    username: FooBar
                    email: foo.bar@example.com
                    token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NDIyMDAwMTIsInN1YiI6IjAxRlNEN0ZaWFpIU0VCQjVBN0dOMDhXQ0JEIn0.MpWf3fckDSJl1K9CHm-KJRDSmeN0yFX-hdcihXEsby0
        '401':
          description: Not logged in


  /auth/refresh:
    get:
      tags:
        - General
      summary: Refresh JWT
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                example:
                  user:
                    username: FooBar
                    email: foo.bar@example.com
                    token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2NDIyMDAwMTIsInN1YiI6IjAxRlNEN0ZaWFpIU0VCQjVBN0dOMDhXQ0JEIn0.MpWf3fckDSJl1K9CHm-KJRDSmeN0yFX-hdcihXEsby0
        '401':
          description: Not logged in

  /auth/logout:
    post:
      tags:
        - General
      summary: Logout
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Successful response
        '401':
          description: Not logged in


  /user:
    get:
      tags:
        - General
      summary: Retrieve info about logged in user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              type: object
              example:
                user:
                  username: FooBar
                  email: foo.bar@example.com
        '401':
          description: Not logged in

  /ping:
    get:
      tags:
        - General
      summary: Ping
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Pong